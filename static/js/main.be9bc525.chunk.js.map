{"version":3,"sources":["Components/Input/Input.jsx","Components/Button/Button.jsx","Components/MultiStep/EmailForm.jsx","Components/SelectInput/Selectinput.jsx","Components/MultiStep/NameForm.jsx","Components/MultiStep/PhoneNumber.jsx","Pages/MultiStepForm.jsx","Pages/PhoneOTPVerification.jsx","App.js","reportWebVitals.js","index.js"],"names":["AppInput","props","_props$placeholder","placeholder","_props$type","type","_props$size","size","onChange","name","error","touched","label","React","createElement","Form","Item","validateStatus","help","colon","Input","AppButton","_props$htmlType","htmlType","_props$label","onClick","_props$disabled","disabled","Button","validationSchema","Yup","shape","email","required","EmailForm","_ref","handleNameForm","Formik","initialValues","onSubmit","values","_ref2","setSubmitting","resetForm","localStorage","setItem","_ref3","errors","handleChange","handleSubmit","isSubmitting","Row","justify","className","Col","span","AppSelectInput","options","Select","allowClear","map","option","Option","key","value","firstName","lastName","gender","age","NameForm","handlePhoneNumberForm","undefined","enableReinitialize","console","log","setFieldValue","e","phonenumber","length","matches","PhoneNumber","navigate","useNavigate","MultiStepForm","_useState","useState","_useState2","_slicedToArray","current","setCurrent","Typography","Title","level","Steps","Step","title","otp","max","PhoneOTPVerification","successAlert","setSuccessAlert","_useState3","_useState4","errorAlert","setErrorAlert","otpFormRef","useRef","handleSuccessCancel","handleErrorCancel","divStyle","alignItems","justifyContent","display","flexDirection","height","innerRef","getItem","Text","Modal","visible","footer","centered","onCancel","style","role","aria-label","App","Router","Routes","Route","path","exact","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.be9bc525.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Input } from \"@mui/material\";\r\nimport { Form, Input } from \"antd\";\r\n\r\n\r\nfunction AppInput(props) {\r\n  const {\r\n    placeholder = \"Enter\",\r\n    type = \"text\",\r\n    size = \"large\",\r\n    onChange,\r\n    name,\r\n    error,\r\n    touched,\r\n    label,\r\n  } = props;\r\n  \r\n  return (\r\n    <Form.Item\r\n      validateStatus={error && touched ? \"error\" : \"\"}\r\n      help={touched && error ? error : \"\"}\r\n      label={label}\r\n      colon={false}\r\n    >\r\n      <Input\r\n        placeholder={placeholder}\r\n        type={type}\r\n        size={size}\r\n        onChange={onChange}\r\n        name={name}\r\n      />\r\n    </Form.Item>\r\n  );\r\n}\r\n\r\nexport default AppInput;\r\n","import React from \"react\";\r\nimport { Button } from 'antd';\r\nfunction AppButton(props) {\r\n  const { type = \"primary\", htmlType = \"submit\", label=\"Submit\", onClick, disabled = false } = props;\r\n  return (\r\n    <Button type={type} htmlType={htmlType} onClick={onClick} disabled={disabled}>\r\n      {label}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default AppButton;\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Col, Row, Form } from \"antd\";\r\nimport AppInput from \"../Input/Input\";\r\nimport AppButton from \"../Button/Button\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"Please enter your email address\"),\r\n});\r\n\r\nfunction EmailForm({ handleNameForm }) {\r\n  const initialValues = {\r\n    email: \"\",\r\n  };\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setSubmitting(true);\r\n        handleNameForm(values);\r\n        localStorage.setItem(\"email\", values.email);\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row type={\"flex\"} justify={\"center\"} className=\"padding\">\r\n            <Col span={24}>\r\n              <AppInput\r\n                placeholder=\"Enter your email address\"\r\n                values={values.email}\r\n                touched={touched.email}\r\n                error={errors.email}\r\n                onChange={handleChange}\r\n                name=\"email\"\r\n                type=\"email\"\r\n              />\r\n            </Col>\r\n            <Col span={24} className=\"text-center\">\r\n              <AppButton \r\n                disabled={isSubmitting} \r\n                label=\"Next\" \r\n                onClick={handleSubmit} \r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default EmailForm;\r\n","import React from \"react\";\nimport { Form, Select } from \"antd\";\n\nfunction AppSelectInput(props) {\n  const {\n    placeholder = \"Enter\",\n    size = \"large\",\n    onChange,\n    name,\n    error,\n    touched,\n    label,\n    options,\n  } = props;\n\n  return (\n    <Form.Item\n      validateStatus={error && touched ? \"error\" : \"\"}\n      help={touched && error ? error : \"\"}\n      label={label}\n      colon={false}\n      name={name}\n    >\n      <Select\n        placeholder={placeholder}\n        onChange={onChange}\n        allowClear\n        size={size}\n      >\n        {options.map((option) => (\n          <Select.Option key={option.value} value={option.value} label={option.label}>\n            {option.label}\n          </Select.Option>\n        ))}\n      </Select>\n    </Form.Item>\n  );\n}\n\nexport default AppSelectInput;\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Col, Row, Form } from \"antd\";\r\nimport AppInput from \"../Input/Input\";\r\nimport AppSelectInput from \"../SelectInput/Selectinput\";\r\nimport AppButton from \"../Button/Button\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  firstName: Yup.string().required(\"Please enter your given name\"),\r\n  lastName: Yup.string().required(\"Please enter your family name\"),\r\n  gender: Yup.string().required(\"Please select your gender\"),\r\n  age: Yup.number().required(\"Please enter your age\"),\r\n});\r\n\r\n\r\nfunction NameForm({ handlePhoneNumberForm }) {\r\n  const initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    age: undefined,\r\n    gender: \"\",\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize={true}\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        console.log(\"hello\");\r\n        setSubmitting(true);\r\n        handlePhoneNumberForm(values);\r\n        localStorage.setItem(\"firstName\", values.firstName);\r\n        localStorage.setItem(\"lastName\", values.lastName);\r\n        localStorage.setItem(\"age\", values.age);\r\n        localStorage.setItem(\"gender\", values.gender);\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        setFieldValue,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row type={\"flex\"} justify={\"center\"} className=\"padding\">\r\n            <Col span={24}>\r\n              <AppInput\r\n                placeholder=\"Enter your first name\"\r\n                values={values.firstName}\r\n                touched={touched.firstName}\r\n                error={errors.firstName}\r\n                onChange={handleChange}\r\n                name=\"firstName\"\r\n                type=\"text\"\r\n              />\r\n            </Col>\r\n            <Col span={24}>\r\n              <AppInput\r\n                placeholder=\"Enter your last name\"\r\n                values={values.lastName}\r\n                touched={touched.lastName}\r\n                error={errors.lastName}\r\n                onChange={handleChange}\r\n                name=\"lastName\"\r\n                type=\"text\"\r\n              />\r\n            </Col>\r\n            <Col span={24}>\r\n              <AppSelectInput\r\n                placeholder=\"Enter your gender\"\r\n                values={values.gender}\r\n                touched={touched.gender}\r\n                error={errors.gender}\r\n                onChange={(e)=>{\r\n                  setFieldValue(\"gender\", e);\r\n                }}\r\n                name=\"gender\"\r\n                options={[\r\n                  { label: \"Male\", value: \"Male\" },\r\n                  { label: \"Female\", value: \"Female\" },\r\n                  { label: \"Other\", value: \"Other\" }\r\n                ]}\r\n              />\r\n            </Col>\r\n            <Col span={24}>\r\n              <AppInput\r\n                placeholder=\"Enter your age\"\r\n                values={values.age}\r\n                touched={touched.age}\r\n                error={errors.age}\r\n                onChange={handleChange}\r\n                name=\"age\"\r\n                type=\"number\"\r\n              />\r\n            </Col>\r\n            <Col span={24} className=\"text-center\">\r\n              <AppButton \r\n                label=\"Next\" \r\n                disabled={isSubmitting} \r\n                onClick={handleSubmit} \r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default NameForm;\r\n","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Col, Row, Form } from \"antd\";\r\nimport AppInput from '../Input/Input';\r\nimport AppButton from '../Button/Button';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  phonenumber: Yup.string()\r\n    .length(10, \"Phone number must be 10 digits\")\r\n    .matches('[0-9]{10}', \"Invalid contact number\")\r\n    .required(\"Please enter your contact number\"),\r\n});\r\n\r\nfunction PhoneNumber() {\r\n  const navigate = useNavigate();\r\n\r\n  const initialValues = {\r\n    phonenumber: \"\"\r\n  }\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        navigate('/phone-verification')\r\n        setSubmitting(true);\r\n        localStorage.setItem(\"phonenumber\", values.phonenumber);\r\n        localStorage.setItem(\"otp\", \"1234\");\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row type={\"flex\"} justify={\"center\"} className=\"padding\">\r\n            <Col span={24}>\r\n              <AppInput\r\n                placeholder=\"Enter your contact number\"\r\n                values={values.phonenumber}\r\n                touched={touched.phonenumber}\r\n                error={errors.phonenumber}\r\n                onChange={handleChange}\r\n                name=\"phonenumber\"\r\n                type=\"tel\"\r\n              />\r\n            </Col>\r\n            <Col span={24} className=\"text-center\">\r\n              <AppButton\r\n                label=\"Send OTP\"\r\n                disabled={isSubmitting}\r\n                onClick={handleSubmit}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default PhoneNumber","import React, { useState } from \"react\";\r\nimport { Steps, Typography } from \"antd\";\r\nimport EmailForm from \"../Components/MultiStep/EmailForm\";\r\nimport NameForm from \"../Components/MultiStep/NameForm\";\r\nimport PhoneNumber from \"../Components/MultiStep/PhoneNumber\";\r\n\r\n\r\nfunction MultiStepForm() {\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const handleNameForm = (values) => {\r\n    setCurrent(1);\r\n    console.log(values, current);\r\n  }\r\n\r\n  const handlePhoneNumberForm = (values) => {\r\n    setCurrent(2);\r\n    console.log(values, current);\r\n  }\r\n\r\n  return (\r\n    <div className=\"padding\">\r\n      <Typography.Title level={2} className=\"text-center\">User Form</Typography.Title>\r\n      <Steps current={current}>\r\n        <Steps.Step title=\"User Email\" key={0} />\r\n        <Steps.Step title=\"User Details\" key={1} />\r\n        <Steps.Step title=\"Contact No.\" key={2} />\r\n      </Steps>\r\n      {current === 0 ? (\r\n        <EmailForm handleNameForm={handleNameForm} />\r\n      ) : current === 1 ? (\r\n        <NameForm handlePhoneNumberForm={handlePhoneNumberForm} />\r\n      ) : current === 2 ? (\r\n        <PhoneNumber />\r\n      ) : (\r\n        <div>\r\n          <h1>Error</h1>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiStepForm;\r\n","import React, { useState, useRef } from 'react'\r\nimport AppInput from '../Components/Input/Input';\r\nimport AppButton from '../Components/Button/Button';\r\nimport { Modal, Typography, Row, Col, Form } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  otp: Yup.string().max(4, \"Invalid OTP\").required(\"Please enter your OTP\"),\r\n});\r\n\r\nfunction PhoneOTPVerification() {\r\n  const [successAlert, setSuccessAlert] = useState(false);\r\n  const [errorAlert, setErrorAlert] = useState(false);\r\n  const otpFormRef = useRef();\r\n\r\n  const handleOtpVerification = (value) => {\r\n    if (localStorage.getItem(\"otp\") === value) {\r\n      setSuccessAlert(true);\r\n    } else {\r\n      setErrorAlert(true);\r\n    }\r\n  }\r\n\r\n  const handleSuccessCancel = () => {\r\n    setSuccessAlert(false);\r\n    otpFormRef.current.resetForm();\r\n  }\r\n\r\n  const handleErrorCancel = () => {\r\n    setErrorAlert(false);\r\n    otpFormRef.current.resetForm();\r\n  }\r\n\r\n  const divStyle = {\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: \"20vh\",\r\n  }\r\n\r\n  const initailValues = {\r\n    otp: \"\",\r\n  }\r\n  return (\r\n    <div className=\"padding\">\r\n      <Typography.Title level={2} className=\"text-center\">Please Verify OTP</Typography.Title>\r\n      <Formik\r\n        innerRef={otpFormRef}\r\n        initialValues={initailValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { setSubmitting, resetForm }) => {\r\n          setSubmitting(true);\r\n          handleOtpVerification(values.otp);\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row type={\"flex\"} justify={\"center\"} className=\"padding\">\r\n              <Col span={24}>\r\n                <AppInput\r\n                  placeholder=\"Enter your OTP\"\r\n                  values={values.otp}\r\n                  touched={touched.otp}\r\n                  error={errors.otp}\r\n                  onChange={handleChange}\r\n                  name=\"otp\"\r\n                  type=\"text\"\r\n                />\r\n                <Typography.Text type=\"secondary\">{errors.otp && \"Default OTP is 1234\"}</Typography.Text>\r\n              </Col>\r\n              <Col span={24} className=\"text-center\">\r\n                <AppButton\r\n                  disabled={isSubmitting}\r\n                  label=\"Verify OTP\"\r\n                  onClick={handleSubmit}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <Modal\r\n        visible={successAlert}\r\n        footer={null}\r\n        centered\r\n        onCancel={handleSuccessCancel}\r\n      >\r\n        <div style={divStyle}>\r\n          <Typography.Title level={4}>{localStorage.getItem(\"phonenumber\")} <span role=\"img\" aria-label=\"right\">✅</span></Typography.Title>\r\n          <Typography.Text>{localStorage.getItem(\"firstName\") + \" \" + localStorage.getItem(\"lastName\")}, You have successfully verified your contact number.</Typography.Text>\r\n          <AppButton label={\"Cool\"} onClick={handleSuccessCancel} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        visible={errorAlert}\r\n        footer={null}\r\n        centered\r\n        onCancel={handleErrorCancel}\r\n      >\r\n        <div style={divStyle}>\r\n          <Typography.Title level={4}>{localStorage.getItem(\"phonenumber\")} <span role=\"img\" aria-label=\"wrong\">❌</span></Typography.Title>\r\n          <Typography.Text>{localStorage.getItem(\"firstName\") + \" \" + localStorage.getItem(\"lastName\")}, You have entered invalid otp.</Typography.Text>\r\n          <Typography.Text>Verification Failed! Please try again.</Typography.Text>\r\n          <AppButton label={\"Ok\"} onClick={handleErrorCancel} />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PhoneOTPVerification","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport MultiStepForm from \"./Pages/MultiStepForm\";\nimport PhoneOTPVerification from \"./Pages/PhoneOTPVerification\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Routes>\n          <Route path=\"/multistep-form\" exact element={<MultiStepForm/>} />\n          <Route path=\"/phone-verification\" element={<PhoneOTPVerification />}/>\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}